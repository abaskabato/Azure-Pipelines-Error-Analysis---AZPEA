// Relos Most Common Release Errors Over Past 30days
// The filtering technique used in these specific queries is more inclined to cancel the noise of meaningless ( only readable in technical level) logEntries.

Logs
| where LogEntry contains "##[error]" 
| where LogEntryDateTime >= ago(30d) 
| where DeploymentStatus == "failed"
| where LogEntry !startswith "System." and LogEntry !contains "System."
| where LogEntry !startswith "--- End of stack trace" and LogEntry !contains "--- End of stack trace" 
| where LogEntry !startswith "PSSession" and LogEntry !contains "pssession" and LogEntry !contains "see log for details"
| summarize count() by LogEntry, TaskName
| order  by count_ desc 
| project exampleMostCommonReleaseErrorsOverPast30days = substring( LogEntry, 0),  Frequency = substring(count_,0)
| limit 10

// Considering the fact that those canceled noise from data might have an impact, 
//The following query clearly shows most commonly failing tasks ( Tasks that include the canceled Logs on the previous queries) 
 // exampleMostFailingTasks/30 days
Logs 
| where LogEntry contains "##[error]"
| where LogEntryDateTime >=ago(30d)
| where DeploymentStatus == "failed"
| summarize count() by TaskName
| order by count_ desc 
| project exampleMostFailingTasks = substring(TaskName,  0), Frequency = substring(count_,0)

// Combining both of the Failing task (tasks that includes Unreadable LogEntry data) and example most common Release errors ( filtered data ).  
// This query is Genecic which implies the outcome of the data is Unfiltered OR not easily readable. 
// Having this data will help some of code base problems and it is technically traceable
Logs
| where LogEntry contains "##[error]" 
| where LogEntryDateTime >= ago(30d) 
| where DeploymentStatus == "failed"
| summarize count() by LogEntry, TaskName
| order  by count_ desc 
| project exampleMostCommonUNFILTEREDReleaseErrorsOverPast30days = substring( LogEntry, 0),  Frequency = substring(count_,0), TaskName
| limit 30

// The following queries are Customizable which can apply to any specif specific case Errors. 
// Most Common Keyword = " Input From a User"  For instance: DNS Server is, Quota, IEjobName 
// Replace your keyword inside "Most common Keyword " and see if what you thought was a common failing over past 30 days

Logs
| where LogEntry contains "Most Common Keyword"
| where DeploymentStatus == "failed"
| where LogEntryDateTime >= ago(30d)
| project LogEntryDetails = substring( LogEntry, 21 ), TaskName, ReleaseName
| summarize count() by LogEntryDetails,ReleaseName
| order by count_ desc 
| limit 30 




